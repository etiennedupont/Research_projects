%!PS-Adobe-3.1 EPSF-3.0
%%Title: fig_ppt.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: forget
%%CreationDate: 15/03/2016, 23:15:34
%%BoundingBox: 446 192 540 387
%%HiResBoundingBox: 446 192 540 387
%%CropBox: 446 192 540 387
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 862 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2016-03-15T23:14:16+01:00"
   xmp:CreatorTool="Microsoft® Office PowerPoint® 2007"
   xmp:ModifyDate="2016-03-15T23:14:16+01:00"
   pdf:Producer="Microsoft® Office PowerPoint® 2007">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>forget</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Diapositive 1</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 540 mo
720 540 li
720 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
452.77 252.99 mo
473.395 252.99 li
473.395 230.615 li
452.77 230.615 li
cp
/1 
[/DeviceCMYK] /CSA add_res
.00442512 .0817578 .124514 3.0518e-5 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
452.77 252.99 mo
473.395 252.99 li
473.395 230.615 li
452.77 230.615 li
cp
.740688 .455604 .0273442 3.0518e-5 cmyk
@
450.72 326.7 mo
471.97 326.7 li
471.97 304.575 li
450.72 304.575 li
cp
1 /0 /CSD get_res sepcs
1 sep
ef
450.72 326.7 mo
471.97 326.7 li
471.97 304.575 li
450.72 304.575 li
cp
.740688 .455604 .0273442 3.0518e-5 cmyk
@
450.72 178.6 mo
474.72 178.6 li
474.72 156.6 li
450.72 156.6 li
cp
.517937 3.0518e-5 .125399 3.0518e-5 cmyk
ef
450.72 178.6 mo
474.72 178.6 li
474.72 156.6 li
450.72 156.6 li
cp
.721096 .438056 .0239261 3.0518e-5 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: MNDBAA+Calibri,Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /MNDBAA+Calibri,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc0abab4000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c79666a7556120000784c00001cba68656164f2f402dd000010480000
0036686865610d8d07190000108000000024686d74785bb7083e000010a4
000026366c6f6361eceaf7fe000036dc00001e546d6178701c0416310000
5530000000206e616d65de4952880000555000000d5c7072657028b9ff7e
000062ac000015a0676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e00002ff4000acff00000001000000004d53202000200000
00a00600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
00000005bd7161e6dc325f0f3cf50019080000000000bbeb7ccc00000000
d20f7e50fbdafd8d09ec07c5000100090002000000000000000100000600
fe0001c40aa0fbdafa8609ec0001000000000000000000000000000003f2
040e0000000000000000000001cf00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000047c008d043c004f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000050c008d
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000006fe008d0545008d0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000003f300470000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000003590048000000000000000000000000000000000000
000000000000000000000000000000000000044b004b0000000000000000
000000000407004a00000000000000000000000000000000000000000000
000000000000000000000000000002880019000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003cb001b0000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001f7006b00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000044b007e
000000000000000000000000000000000000000000000000044d00480000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002d8007e0000
000000000000000000000331004900000000000000000000000000000000
000000000000000000000000000000000000000002c60017000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000044b0079000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000029b00e6000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000382007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000040e005800000000040e00240000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e014001d301d301d301d301d301d301d301d301d3
01d301d301d301d301d301d301d301d301d301d301d301d301d301d301d3
01d301d3027e027e027e027e027e027e027e027e027e027e027e027e027e
027e027e027e027e027e027e027e027e027e027e027e034203f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f403f403f403f403f403f403f403f403f403f4
03f403f403f403f403f403f404e004e004e004e004e004e004e004e004e0
04e004e004e004e004e00576057605760576057605760576057605760576
061206120612061206de06de06de06de06de06de06de06de06de06de0768
076807680768076807680768076807680768076807680768076807680768
076807680768076807680768076807680768076807680768076807680768
076807680768076807680768076807680768086e086e086e086e086e086e
086e086e086e086e086e086e086e08c308c308c308c308c308c308c308c3
08c308c308c308c308c308c308c308c308c308c308c308c308c308c308c3
08c308c3094a094a094a094a094a094a094a09bd09bd09bd09bd09bd09bd
09bd09bd09bd09bd09bd09bd09bd09bd09bd0a3c0a3c0a3c0a3c0b0f0b0f
0b0f0b0f0b0f0b0f0b0f0b0f0b0f0b0f0ba60ba60ba60ba60ba60ba60ba6
0ba60ba60ba60ba60ba60ba60ba60ba60ba60ba60ba60ba60ba60ba60ba6
0ba60ba60ba60ba60ba60c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c220c220c220c220c220c220c220c220c220c22
0c220c220c220c220c220c700c700c700c700c700c700c700c700c700c70
0c700c700c700c700c700c700c700c700c700c700c700c700c700c700c70
0c700c700c700c700c700c700c700c700c700c700c700c700c700c700c70
0c700c700c700c700c700c700c700c700c700c700c700c700c700c700c70
0c700c700c700c700c700c700c700c700c700c700c700c700c700c700c70
0c700c700c700c700c700c700c700cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf
0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf
0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf
0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf
0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf
0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf0cbf
0cbf0cbf0cbf0cbf0d9d0d9d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d
0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0e5d0001
00000f29006000050000000000020010002f006000000c6515a000000000
0000002d02220000000300000000006400000000000300000001000e0064
00000003000000020008032a0000000300000003002e0304000000030000
00040018031a00000003000000050018033200000003000000060018034a
0000000300000007007603620000000300000008002a000e000000030000
0009002003d8000000030000000a02a00064000000030000000b005603f8
000000030000000c002a044e000000030000000d02980478000000030000
000e006c071000010000000000000032077c0001000000000001000707ae
0001000000000002000409110001000000000003001708fe000100000000
0004000c09090001000000000005000c09150001000000000006000c0921
0001000000000007003b092d000100000000000800150783000100000000
000900100968000100000000000a015007ae000100000000000b002b0978
000100000000000c001509a3000100000000000d014c09b8000100000000
000e00360b040003000104090000006400000003000104090001000e0064
00030001040900020008032a0003000104090003002e0304000300010409
00040018031a00030001040900050018033200030001040900060018034a
0003000104090007007603620003000104090008002a000e000300010409
0009002003d8000300010409000a02a00064000300010409000b005603f8
000300010409000c002a044e000300010409000d02980478000300010409
000e006c071000a9002000320030003100350020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
002000690073002000610020006d006f006400650072006e002000730061
006e0073002000730065007200690066002000660061006d0069006c0079
0020007700690074006800200073007500620074006c006500200072006f
0075006e00640069006e006700730020006f006e0020007300740065006d
007300200061006e006400200063006f0072006e006500720073002e0020
004900740020006600650061007400750072006500730020007200650061
006c0020006900740061006c006900630073002c00200073006d0061006c
006c00200063006100700073002c00200061006e00640020006d0075006c
007400690070006c00650020006e0075006d006500720061006c00200073
006500740073002e0020004900740073002000700072006f0070006f0072
00740069006f006e007300200061006c006c006f00770020006800690067
006800200069006d007000610063007400200069006e0020007400690067
00680074006c007900200073006500740020006c0069006e006500730020
006f0066002000620069006700200061006e006400200073006d0061006c
006c0020007400650078007400200061006c0069006b0065002e00200043
0061006c0069006200720069002700730020006d0061006e007900200063
0075007200760065007300200061006e006400200074006800650020006e
006500770020007200610073007400650072006900730065007200200074
00650061006d00200075007000200069006e002000620069006700670065
0072002000730069007a0065007300200074006f00200072006500760065
0061006c002000610020007700610072006d00200061006e006400200073
006f006600740020006300680061007200610063007400650072002e004d
006900630072006f0073006f00660074003a002000430061006c00690062
0072006900200042006f006c006400560065007200730069006f006e0020
0035002e0037003400430061006c0069006200720069002d0042006f006c
006400430061006c00690062007200690020006900730020006100200074
0072006100640065006d00610072006b0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000670072006f0075
00700020006f006600200063006f006d00700061006e006900650073002e
004c007500630028006100730029002000640065002000470072006f006f
00740068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f006300740066006f006e007400730068
007400740070003a002f002f0066006f006e007400660061006200720069
006b002e0063006f006d0059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e0068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f0066006f
006e00740073002f00640065006600610075006c0074002e006100730070
0078a92032303135204d6963726f736f667420436f72706f726174696f6e
2e20416c6c205269676874732052657365727665642e43616c6962726920
69732061206d6f6465726e2073616e732073657269662066616d696c7920
7769746820737562746c6520726f756e64696e6773206f6e207374656d73
20616e6420636f726e6572732e204974206665617475726573207265616c
206974616c6963732c20736d616c6c20636170732c20616e64206d756c74
69706c65206e756d6572616c20736574732e204974732070726f706f7274
696f6e7320616c6c6f77206869676820696d7061637420696e2074696768
746c7920736574206c696e6573206f662062696720616e6420736d616c6c
207465787420616c696b652e2043616c696272692773206d616e79206375
7276657320616e6420746865206e65772072617374657269736572207465
616d20757020696e206269676765722073697a657320746f207265766561
6c2061207761726d20616e6420736f6674206368617261637465722e4d69
63726f736f66743a2043616c6962726920426f6c6456657273696f6e2035
2e373443616c696272692d426f6c6443616c696272692069732061207472
6164656d61726b206f6620746865204d6963726f736f66742067726f7570
206f6620636f6d70616e6965732e4c7563286173292064652047726f6f74
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f6374666f6e7473687474703a2f2f666f6e7466616272696b
2e636f6d596f75206d617920757365207468697320666f6e742061732070
65726d6974746564206279207468652045554c4120666f72207468652070
726f6475637420696e207768696368207468697320666f6e742069732069
6e636c7564656420746f20646973706c617920616e64207072696e742063
6f6e74656e742e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f666f6e74732f64656661756c742e61737078
b10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c
1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb8
02f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802ed
b21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e
2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1f
b802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802
e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb2
1d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f
1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb8
02d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cf
b21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d
121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1f
b802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802
c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb2
1d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f
1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb8
02b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1
b21c321fb802b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c
331fb802acb21c331fb802abb21c331fb802aab21c311fb802a9b21c311f
b802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802
a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b2
1c331fb8029fb21c331fb8029eb21c331fb8029db21c331fb8029cb21c31
1fb8029bb21c311fb8029ab21c321fb80299b21c321fb80298b21c321fb8
0297b21c321fb80296b21c321fb80295b21c331fb80294b21c331fb80293
b21c331fb80292b21c331fb80291b21c331fb80290b21c331fb8028fb21c
331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8028bb21c321f
b8028ab21c321fb80289b21c321fb80288b21c331fb80287b21c331fb802
86b21c331fb80285b21c331fb80284b21c331fb80283b21c331fb80282b2
1b341fb80281b21b341fb80280b21b341fb8027fb21b341fb8027eb21b34
1fb8027db21b341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb8
0279b21b341fb80278b21b341fb80277b21b341fb80276b21b341fb80275
b21b341fb80274b21b341fb80273b21b341fb80272b21b341fb80271b21b
341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8026db21a351f
b8026cb21a351fb8026bb21a351fb8026ab21a351fb80269b21a351fb802
68b21a351fb80267b21a351fb80266b21a351fb80265b21a351fb80264b2
1a351fb80263b21a351fb80262b21a351fb80261b21a351fb80260b21a35
1fb8025fb21a351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8
025bb21a351fb8025ab21a351fb80259b219371fb80258b219371fb80257
b219371fb80256b219371fb80255b219371fb80254b219371fb80253b219
371fb80252b219371fb80251b219371fb80250b219371fb8024fb219371f
b8024eb219371fb8024db219371fb8024cb219371fb8024bb219371fb802
4ab219371fb80249b219371fb80248b219371fb80247b219371fb80246b2
19371fb80245b219371fb80244b219371fb80243b219371fb80242b21937
1fb80241b219371fb80240b219371fb8023fb219371fb8023eb219371fb8
023db219371fb8023cb219371fb8023bb219371fb8023ab219371fb80239
b218391fb80238b218391fb80237b218391fb80236b218391fb80235b218
391fb80234b218391fb80233b218391fb80232b218391fb80231b218391f
b80230b218391fb80301b2182e1fb8022fb218391fb8022eb218391fb802
2db218391fb8022cb218391fb8022bb218391fb8022ab218391fb80229b2
18391fb80228b218391fb80227b218391fb80226b218391fb80225b2173b
1fb80224b2173b1fb80223b217321fb80222b2173a1fb80221b2173b1fb8
0220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021c
b2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b1fb80218b217
3b1fb80217b2173b1fb80216b2173b1fb80215b217321fb80214b2173a1f
b80213b2173b1fb80212b2173b1fb80211b2173b1fb80210b2173b1fb802
0fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2
173b1fb8020ab2173b1fb80209b217321fb80208b217321fb80207b2173b
1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb80203b2173b1fb8
0202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2173b1fb801fe
b2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b1fb801fab217
3b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb801f6b2173a1f
b801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801
f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2
173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b
1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801e5b216231fb8
01e4b216371fb801e3b216371fb801e2b216381fb801e1b216381fb801e0
b216431fb801dfb216441fb801deb216441fb801ddb216441fb801dcb216
451fb801dbb216461fb801dab216461fb801d9b216461fb801d8b216231f
b801d7b216231fb801d6b216381fb801d5b216431fb801d4b216431fb801
d3b216431fb801d2b216441fb801d1b216461fb801d0b216461fb801cfb2
16461fb801ceb216461fb801cdb216461fb801ccb216461fb801cbb21643
1fb801cab216231fb801c9b216231fb801c8b216371fb801c7b216371fb8
01c6b216381fb801c5b216421fb801c4b216431fb801c3b216441fb801c2
b216451fb801c1b216461fb801c0b216461fb801bfb216461fb801beb216
461fb801bdb216461fb801bcb216461fb801bbb216461fb801bab216371f
b801b9b216381fb801b8b216421fb801b7b216431fb801b6b216431fb801
b5b216431fb801b4b216441fb801b3b216441fb801b2b216441fb801b1b2
16451fb801b0b216451fb801afb216451fb801aeb216461fb801adb21646
1fb801acb216461fb801abb216461fb801aab216461fb801a9b215341fb8
01a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4
b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d1fb801a0b215
4e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8019cb215401f
b8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198b2154f1fb801
97b2154f1fb80196b215501fb80195b215521fb80194b215521fb80193b2
15521fb80192b215411fb80191b2154f1fb80190b215501fb8018fb21550
1fb8018eb215511fb8018db215521fb8018cb215521fb8018bb215521fb8
018ab214581fb80189b214591fb80188b2145c1fb80187b2145d1fb80186
b2144a1fb80185b2145b1fb80184b2145c1fb80183b214591fb80182b214
5d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1f
c00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561fae0b561fad0b
561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b561fa60b561f
a50b561fa40b561fa30b561fa20b561fa10b561fa00b561f9f0b561f9e0a
681f9a0a681f990a681f980a681f970a681f960a681f950a681f940a681f
930a681f920a681f910a681f9009681f8f09681f8e09681f8d09681f8c09
681f410902fc02fa0056001f02fb02fa0068001f017fb213321fb8017eb2
12371fb80174b212371fb80173b211421fb80172b211421fb80171b21142
1fb80170b211421fb8016fb211421fb8016eb211421fb8016db211421fb8
016cb211421fb8016bb211421fb8016ab211421fb8013cb211421fb8013b
b210421fb8013ab210421fb80139b210421fb80138b210421fb80137b210
421fb80136b210421fb80135b210421fb80134b210421fb80133b210421f
b80132b20f451fb80131b20f451fb80130b20f451fb80112b20f451fb801
11b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451fb8010db2
0e481fb8010cb20e481fb8010bb20e481fb8010ab20e481fb80109b20e48
1fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a
1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc
0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b56
1fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213321fb801
7ab211401fb80179b211421fb80178b211421fb80177b211421fb80176b2
11421fb80175b211421fb80143b211421fb80142b210421fb80141b21042
1fb80140b210421fb8013fb210421fb8013eb210421fb8013db20f451fb8
0115b20f451fb80114b20f451fb80113b20f451fb903030302b2401fa4be
030200b4030200c4030200030300b213321fb8017bb213321fb80153b212
371fb80152b211401fb80151b211401fb80150b211401fb8014fb211401f
b8014eb211401fb8014db211401fb8014cb211401fb8014bb211401fb801
4ab211401fb80149b211401fb80148b211401fb80147b211401fb80146b2
11401fb80145b211401fb80144b211401fb80122b211401fb80121b21042
1fb80120b210421fb8011fb210421fb8011eb210421fb8011db210421fb8
011cb210421fb8011bb210421fb8011ab210421fb80119b210421fb80118
b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f45
1ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff40e481ff3
0d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a
1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc8
0c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b56
1fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fdb212371fb801
7db212371fb8017cb212371fb80169b2112e1fb80168b2112e1fb80167b2
11401fb80166b211401fb80165b211401fb80164b211401fb80163b21140
1fb80162b211401fb80161b211401fb80160b211401fb8015fb211401fb8
015eb211401fb8015db211401fb8015cb211401fb8015bb211401fb8015a
b211401fb80159b211401fb80158b211401fb80157b211401fb80156b211
401fb80155b211401fb80154b211401fb8012fb211401fb8012eb210421f
b8012db210421fb8012cb210421fb8012bb210421fb8012ab210421fb801
29b210421fb80128b210421fb80127b210421fb80126b210421fb80125b2
0f451fb80124b20f451fb80123b20f451fb80105b20f451fb80104b20f45
1fb80103b20f451fb80102b20f451fb80101b20e481fb8010040a20e481f
ff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c
4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f
83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b
7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948775578ab
77550b77010c764875555475e475f4750314755475647574759475d475e4
7507a475b475c47503b8ffc0401275383b46807590750214757475020075
010fb8ffc04021750b0e467448725573ab725504723472023bf47201e072
01023072015072607202b8ffc0b372242846b8ffc0403572161a46107230
7240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6f
bf6f02406f090d466e486d55df6d0100bc02ff001002ff00c002ffb2030a
6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e675568ab675566
2e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a555bab5a
55592e58555703251f562e545555ab5455532e515552ab51554f2e4e554e
03251f4d2e4b554cab4b554a2e485549ab4855504801472e46554503361f
001f01001e01001e701e801ef01e040b601d701d02701de01df01d03701c
f01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f
19af19050f198f199f19030c7012801202701180110230114011d011e011
040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0e
cf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f
0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c03
9f0c01400c262946ef0aff0a02400a242746ef09ff0902ff090100030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e73757373742b732b73742b2b73745e732b5e7374
757374755e73747573015e7374737475757473745e737473002b2b732b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b73
74752b2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b
5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[7355 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> MNDBAA+Calibri,Bold AddT42Char 
1 6526 1006 <00010058000003bc0525003e0112b10102435558400e042c01042b01093a
010939010b40b8ffc0b60f024d00400116b802eeb633253325330039ba02
ee000bffea400a0f024d000b010f030b2ab80169b61138392020391bb8ff
e8b30b014d1bb8ffe8b40b0f014c1bb80169400d3316062e531039180b0f
014c39b80159b240065400183f1a4ded2b323f123939ed2b2b11392f1239
39ed012f5f5e5d2bedcd39392f2f10ed31305d2b005e5d5d015d5d1b4013
042c01042b01093a010939010b0040010f032ab80169b61138392020391b
b8ffe8b30b014d1bb8ffe8b40b0f014c1bb80169400d3316062e53103918
0b0f014c39b80159b240065400183f1a4ded2b323f123939ed2b2b11392f
123939ed3130015f5e5d005e5d5d015d5d5925140e022321222e0235343e
0237373e0335342e0223220e0223222e0235343e0633321e0215140e0207
0721321e0203bc050a100afd181620140906101914e043522e1115293e2a
3b5b452e0d090d080503060a194362764065976431184c8a729701fe0a11
0c066b1d291a0b08172c23212f252315f046735f5024213b2c191e251f0c
1c2f22171f171118252318335b7d483f7a8dab719b0c1929>MNDBAA+Calibri,Bold AddT42Char 
1 6970 1008 <00020024fffa03e40514002a002e00f3b101024355584014072e01072b01
061c01071001070e01060d010b30b8ffc0400b0f024d0030010f032e2110
b80267b4270404002dba02090016fff2400d0f024d161b2e27180b0f014c
27b80156b40410100a2bb80165b44021520a5500183f3f1a4ded12392f33
fd2bc432012f2bedcd392f33ed323231305f5e5d2b5e5d5d5d5d5d5d1b40
36270f01272e01272b01261c01271001270e01260d01072e01072b01061c
01071001070e01060d010b0030010f031b2e27180b0f014c27b80156b404
10100a2bb80165b44021520a5500183f3f1a4ded12392f33fd2bc4323130
015f5e5d5e5d5d5d5d5d5d5d5d5d5d5d5d5d59011406232315140e022322
2e02353521222e0235343e0237013e0333321e0215113332160123012103
e41512730c1e302624311d0bfe110e160f0703070d0a019205182b422f33
482b14731017fe6902feab015701743335ea0a0f0a05050a0f0aea07192f
27202f26221302c5090d0904050b100bfcf5310284fdad00>MNDBAA+Calibri,Bold AddT42Char 
1 316 17 <0003008d00000436050e001e002b0038009fb10102435558b9001f0293b5
1a0b15150b00b8029cb22c2633b80279b20b1a27b80103b331310724b8ff
e8b40b0f014c24b801254009105134180b0f014c34b80129b24007540018
3f1a4ded2b3fed2b12392fed39012fed322fed11392f1239ed31301bb11a
27b80103b331310724b8ffe8b40b0f014c24b801254009105134180b0f01
4c34b80129b240075400183f1a4ded2b3fed2b12392fed3931305901140e
0423212226351134363321321e0215140e02071e0301342e022323113332
3e0213342e0223231133323e02043626435d707f4efea8212d2d21014577
a5713c182e432b375d4528feac1830493d859339442d16431e3a5a489cbe
374b371f01844570563e2813272c04682c2728517c542f534434100a324f
6a01df273e2916feb01b2f3ffdf92d47301afe90172d4300>MNDBAA+Calibri,Bold AddT42Char 
1 640 18 <0001004fffeb040c05230039008bb10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed012fedd4c4
31301bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015a
b73530180b0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed
31305925140e0623222e02353412363633321e0615140e0223222e022322
0e0215141e0233323e0233321e02040c03060a163f5b754485d69650589e
dd85366455441b0a0603040a0e090f2e4965464d79552c2f577b4d466649
2f0d0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c
261c1e2a1a0c232b233f75a66872a76c3521282008182b00>MNDBAA+Calibri,Bold AddT42Char 
1 934 44 <0001008dfffa047f0514002f00cfb10102435558b9002fffe0b30f014d25
b8ffe0b30f014d24b8ffe0b30f014d0bb8ffe0b30f014d0ab8ffe0b30f01
4d00b8ffe0b40f014d230cb80293b217240bb80293400b00172a5224180b
0f014c24bb01630040000cffe840140b0f014c0f0c1f0c020c030c0c121d
521255055500183f3f3f12392f5f5e5d2b1a4ded2b3f012fd4ed3210ed32
31302b2b2b2b2b2b1b40092a5224180b0f014c24bb01630040000cffe840
140b0f014c0f0c1f0c020c030c0c121d521255055500183f3f3f12392f5f
5e5d2b1a4ded2b3f31305925140e0223222e0235112111140e0223222e02
3511343e0233321e0215112111343e0233321e0215047f0d1e322627331d
0dfe1c0c1e322726331e0d0d1e332627321e0c01e40d1d332726321e0d24
0a100a06060a100a020bfdf50a100a06060a100a04c60a100a06060a100a
fe2501db0a100a06060a100a>MNDBAA+Calibri,Bold AddT42Char 
1 1668 69 <0001008dfffa04b80512003d00b5b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
4ded3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f113311
3331301bb2385229b8fff040120f26024c29282e220c100f26024c0c0b06
0fb8017db7270a19225119552eb8017db240065400183f1a4ded3f3f1239
39ed1139392b111239392b3f31305925140e022323222e02270126262723
16161511140e0223222e02351134363333321e0217131e03173326263511
343e0233321e021504b8101b25137023332b2819febe1c3a170204040b1b
2e24232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e19
0a5c1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b
2f2f0d1e3527fe272b53535028469845025f0a100c05050c100a>MNDBAA+Calibri,Bold AddT42Char 
1 2024 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>MNDBAA+Calibri,Bold AddT42Char 
1 2496 272 <00010048ffea032103d60035009db10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1a4dfd2bd42bed3f
fd2bd4ed012fedc43231301bbc0018011f001f0024ffe8b40b0f014c24b8
011fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b2
40094d00183f1a4dfd2bd42bed3ffd2bd4ed31305925140e0623222e0235
343e0233321e0615140623222e0223220615141e0233323e0233321e0203
21030507183a4a572e679f6c374378a462284d4335160905031410112634
483262681a334d33344b38260d090c0704b01a23180f17211a10407db474
86c3803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00
>MNDBAA+Calibri,Bold AddT42Char 
1 2796 282 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>MNDBAA+Calibri,Bold AddT42Char 
1 3108 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>MNDBAA+Calibri,Bold AddT42Char 
1 3516 296 <00010019fffa02980578003c0073b10102435558b31610001bb8025fb330
2a250ab8011db336471a26b8ffe8b40b0f014c26b8011fb6403048204c10
4800183f3f3f1a4ded2b323fed012fc433fdc433c431301bb9000a011db3
36471a26b8ffe8b40b0f014c26b8011fb6403048204c104800183f3f3f1a
4ded2b323fed31305901140e0223222e0223220e02151533321e02151406
232311140e0223222e02351123222635343e02333335343e0233321e0402
9804080a0607111922171b271a0ca3090f0a051413a30c1c322424311d0b
70131305090f0a6f244d77512746280e090404f21d23130707080711253b
2b520a17281d372ffd2e0a0f0a05050a0f0a02d22f371d28170a4b5b895b
2e0d0f0d1927>MNDBAA+Calibri,Bold AddT42Char 
1 3792 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>MNDBAA+Calibri,Bold AddT42Char 
1 4316 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>MNDBAA+Calibri,Bold AddT42Char 
1 4486 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>MNDBAA+Calibri,Bold AddT42Char 
1 4756 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>MNDBAA+Calibri,Bold AddT42Char 
1 4986 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>MNDBAA+Calibri,Bold AddT42Char 
1 5240 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>MNDBAA+Calibri,Bold AddT42Char 
1 5662 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>MNDBAA+Calibri,Bold AddT42Char 
1 5964 437 <00010079ffe903cc03c60032006bb10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1a4ded2b3f1239393f012fedd4ed3931301b400e2d49270b05194924
180b0f014c24b8014db4400e4d054c00183f3f1a4ded2b3f1239393f3130
5925140e0223222e023535060623222e023511343e0233321e021511141e
023332363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d
210b1d312425301d0c122539263061370b1d302525301c0c220a0f0a0505
0a0f0a6750503c68896602220a0f0a05050a0f0afe08464a351d46430251
0a0f0a05050a0f0a>MNDBAA+Calibri,Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>MNDBAA+Calibri,Bold AddT42Char 
MNDBAA+Calibri,Bold /CharStrings get begin
/space 3 def
/two 1006 def
/four 1008 def
/B 17 def
/C 18 def
/H 44 def
/N 69 def
/a 258 def
/c 272 def
/d 282 def
/e 286 def
/f 296 def
/g 336 def
/i 349 def
/n 374 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
/u 437 def
end
MNDBAA+Calibri,Bold /Encoding get
dup 32 /space put
dup 50 /two put
dup 52 /four put
dup 66 /B put
dup 67 /C put
dup 72 /H put
dup 78 /N put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/UAZDMX+Calibri,Bold /MNDBAA+Calibri,Bold findfont ct_VMDictPut
/UAZDMX+Calibri,Bold*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two /.notdef /four 13{/.notdef}rp /B 
/C 4{/.notdef}rp /H 5{/.notdef}rp /N 18{/.notdef}rp /a /.notdef 
/c /d /e /f /g /.notdef /i 4{/.notdef}rp 
/n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
UAZDMX+Calibri,Bold nf
UAZDMX+Calibri,Bold*1 [18 0 0 -18 0 0 ]msf
406.97 199.73 mo
(N)sh
UAZDMX+Calibri,Bold*1 [12 0 0 -12 0 0 ]msf
418.85 204.17 mo
(2)sh
UAZDMX+Calibri,Bold*1 [18 0 0 -18 0 0 ]msf
424.97 199.73 mo
( )sh
428.93 199.73 mo
(ice)
[4.42804 7.52399 0 ]xsh
%ADOBeginSubsetFont: KTBBAA+Calibri,BoldItalic Initial
ct_T42Dict begin
-0.691 -0.305 1.262 0.965
 256 array 0 1 255 {1 index exch /.notdef put} for  /KTBBAA+Calibri,BoldItalic
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc0ababd000000cc000000606376
742055d14f580000012c000006ac6670676da1ea42ac000007d800000913
676c79666e39468000007af80000067a68656164f1c6048b000010ec0000
0036686865610df70e050000112400000024686d74781a02021b00001148
000026106c6f6361d7dfdaaa0000375800001ee06d6178701cfb17a30000
5638000000206e616d6521e74a2c0000565800000d83707265708c07c7b9
000063dc0000171b676469720000000000000000000000000003044b02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
0304040a0204e00002ff4000acff00000001000000004d53202000210000
00a00600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000700081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
00000000000000000000005f0060006e006f007000710062006700600072
0078007a007b007d007e007f0080008300850086008700890086008c008d
008e008f009100920093009400950096009700980099009a009b009c009d
009e009300960099009e0094009500000099009a00a000a200a600a800aa
00ac00ad00ae00a100a200a300a400a500a700a800a900aa00ab00a300a7
00a800aa00ab00ac00ad00ae009e00a300a600a700a900aa00ac00ad00af
00b000b100ac00ad00ae00af00b000b100b200b300b400b500af00af00b0
00b100b200b300b400b500b700b800b900b600b700b800b900ba00bb00bc
00bd00be00bf00c000c100c200c000c100c200b900ba00bb00bd00be00bf
00c000c100c200b600b700b800b900ba00bb00bc00bd00be00bf00c000c1
00c200cc00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf
00c400c500c600c700c800c900ca00cb00ce00cf00c400c500c600c700c8
00c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca
00cb00cc00cd00ce00cf00d000d100d200d300d400d500d600d800d900da
00db00de00df00e200e300e400ec00d000d100d400d500d600dc00dd00de
00e000e400e200e800d000d100d200d300d400d500d600d700d800d900da
00db00dc00dd00de00df00e000e100e200e300e400e600e700e800e900ed
00ee00d100d200d300d400d500d800d900da00dc00e100e800f600f700fb
0108011a011d010e011300f500f800fb010d011600f600fa0109010d0121
0127012d012e012f01340135013b014101420152012f0130006a006b0090
00910094009600980099009a009a009c0077007b008900940092009300a3
00a400a500a6008100a900ab00ac00ad00ae00af00b100b300b4009b00bb
00bb00bb00bf00bc00bd00c200c300c400c500c600c700c800c900ca00cb
00cd00d000a800ac00b100b400b500b600b700b800b900ba00bb00bc00bd
00be00c200c400c500c600c800b400ca000000b400b500b600b700b800b9
00be00bf00c300c600c700c800c900ca00cb00cf00d000aa00ad00ae00b1
00b200ba00be00c000c500c600c800c900cf00d000d100d200d5000000d4
00d900da00db00dc00dd00de00e200e500d100d300d400d100d200d800da
00db00cb00de00df00df00e100e200e400e500e600d600d700d100d300d3
00d400d500d700ce00d600db00dc00dd00de00c400bb00e100d200d200e0
00d200d100d300d500d600d900d600d600db00c900dc00ac00e100de00de
00df00e000e800eb00ed00e800e900ea00e000e700ed00bc00e300ea00e5
00ba00e700e800e300e800e900ea00cc00ed00f000f200f400ee00ef00f1
00f200f300f400f400f400c100ee00f200ee00ee00f100ef00db00f300db
00ee00ef00eb00d700f000dd00ec00f500f200f700f700f300f900f500f6
00fc00fc00f400d900fa00fb00fc00f700f700da00f900f600fa00fb00fb
00ff00fe00ff010001010102010300f900ff0100010000fc00fc00fc00e2
00fd00e900fe00fa00fe010100fd010301040106010701080109010a010b
010c010d0100010101070108010900ff0100010100fa01020104010b010c
010800ff010001060107010800f8010a010b010c010d010f011001110112
011301140115011600fd010e010f01120118010f01100111010901130114
0115011601170118010e010f011001110112011301150000011701180119
011a0000011e0120012100ce011c011e00f6011a011c011d012001220119
0102011d000000d5012301270128012901300133013500000124012500fd
012e012f013e013f012300000125012601270000012b00fe012f0130013c
013e014101440145012300ff012c0136013b013e01460000000000000000
00000000000000000000000002990092000000000000042600d8050e0105
03c000c2024e0078042600d700b100a000500058005e006a05e802cc4046
5f5e5d5c5b5a59585554535251504f4e4d4c4b4a49484746454443424140
3f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b0042651582320b00d44
235921212d2c20204518684420b001602045b04676688a4560442d2c01b1
0b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0
282370b10228453ab10200080d2d2c2045b00325456164b050515845441b
2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03
458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d
2c4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b00643
0b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2c4523456023456023
456023766818b08062202d2cb00426b00426b00425b0042545234520b003
266062636820b0032661658a2344442d2c2045b0005458b040442045b040
61441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f23
70b01423421b2121592d2c4b515820b0032545695358441b2121591b2121
592d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60
442d2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944
442d2cb0164358b00326458a586466b01f601b64b020606620581b21b040
59b001615923586559b02923442310b029e01b2121212121592d2cb01643
58b004254564b020606620581b21b04059b0016123586559b0292344b004
25b00725082058021b0359b0052510b004252046b0042523423cb0072510
b006252046b00425b0016023423c2058011b0059b0052510b00425b029e0
b0072510b00625b029e0b00425b00725082058021b0359b00425b0032543
48b00625b00325b0016043481b2159212121212121212d2cb0164358b004
254564b020606620581b21b04059b0016123581b6559b0292344b00525b0
0825082058021b0359b0042510b005252046b0042523423cb00425b00725
08b0072510b006252046b00425b0016023423c2058011b0059b0042510b0
0525b029e0b02920456544b0072510b00625b029e0b00525b00825082058
021b0359b00525b003254348b00425b0072508b00625b00325b001604348
1b2159212121212121212d2c02b00425202046b004252342b0052508b003
254548212121212d2c02b0032520b0042508b0022543482121212d2c4523
20451820b00050205823652359236820b040505821b04059235865598a60
442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b
2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b212159
2d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b212121
592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b2121
21592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325
b0062649618b3812342d2c014623466023466123201020468a61b8ff8062
8ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b5258
7d1b7a592d2cb012004b014b54422d2cb1020042b123018851b140018853
5a58b910000020885458b202010243604259b12401885158b92000004088
5458b2020202436042b12401885458b2022002436042004b014b5258b202
0802436042591bb940000080885458b202040243604259b94000008063b8
0100885458b202080243604259b94000010063b80200885458b202100243
604259b94000020063b80400885458b202400243604259595959592d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d00000100000005bd717b8dd33d5f0f3cf50019
080000000000bbeb7ccc00000000d20f8007fa78fd8d0a1e07bc00030009
0002000000000000000100000600fe0001c40aa0fa78f9cc0a1e0800019a
0000000000000000000000000399040e0000000000000000000001cf0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006fe003400000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000439003e000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000002d10026000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000029b009b00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
038200e80000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a801520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
0152015201f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f5027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c02e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e1033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d000100000f6f0057
00050000000000020010002f006000000d16171b000000000000002d0222
0000000300000000006400000000000300000001000e0064000000030000
00020016032a0000000300000003003c030400000003000000040026031a
000000030000000500180340000000030000000600240358000000030000
00070076037c0000000300000008002a000e0000000300000009002003f2
000000030000000a02a00064000000030000000b00560412000000030000
000c002a0468000000030000000d02980492000000030000000e006c072a
0001000000000000003207960001000000000001000707c8000100000000
0002000b092b0001000000000003001e0918000100000000000400130923
0001000000000005000c0936000100000000000600120942000100000000
0007003b095400010000000000080015079d00010000000000090010098f
000100000000000a015007c8000100000000000b002b099f000100000000
000c001509ca000100000000000d014c09df000100000000000e00360b2b
0003000104090000006400000003000104090001000e0064000300010409
00020016032a0003000104090003003c030400030001040900040026031a
000300010409000500180340000300010409000600240358000300010409
00070076037c0003000104090008002a000e0003000104090009002003f2
000300010409000a02a00064000300010409000b00560412000300010409
000c002a0468000300010409000d02980492000300010409000e006c072a
00a9002000320030003100350020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e00430061006c0069006200720069002000690073
002000610020006d006f006400650072006e002000730061006e00730020
00730065007200690066002000660061006d0069006c0079002000770069
0074006800200073007500620074006c006500200072006f0075006e0064
0069006e006700730020006f006e0020007300740065006d007300200061
006e006400200063006f0072006e006500720073002e0020004900740020
006600650061007400750072006500730020007200650061006c00200069
00740061006c006900630073002c00200073006d0061006c006c00200063
006100700073002c00200061006e00640020006d0075006c007400690070
006c00650020006e0075006d006500720061006c00200073006500740073
002e0020004900740073002000700072006f0070006f007200740069006f
006e007300200061006c006c006f00770020006800690067006800200069
006d007000610063007400200069006e002000740069006700680074006c
007900200073006500740020006c0069006e006500730020006f00660020
00620069006700200061006e006400200073006d0061006c006c00200074
00650078007400200061006c0069006b0065002e002000430061006c0069
006200720069002700730020006d0061006e007900200063007500720076
0065007300200061006e006400200074006800650020006e006500770020
00720061007300740065007200690073006500720020007400650061006d
00200075007000200069006e002000620069006700670065007200200073
0069007a0065007300200074006f002000720065007600650061006c0020
00610020007700610072006d00200061006e006400200073006f00660074
0020006300680061007200610063007400650072002e004d006900630072
006f0073006f00660074003a002000430061006c00690062007200690020
0042006f006c00640020004900740061006c006900630056006500720073
0069006f006e00200035002e0037003400430061006c0069006200720069
002d0042006f006c0064004900740061006c0069006300430061006c0069
00620072006900200069007300200061002000740072006100640065006d
00610072006b0020006f006600200074006800650020004d006900630072
006f0073006f00660074002000670072006f007500700020006f00660020
0063006f006d00700061006e006900650073002e004c0075006300280061
00730029002000640065002000470072006f006f00740068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f0066006f006e007400660061006200720069006b002e0063006f006d
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e00740020006100730020007000650072006d0069
00740074006500640020006200790020007400680065002000450055004c
004100200066006f00720020007400680065002000700072006f00640075
0063007400200069006e0020007700680069006300680020007400680069
007300200066006f006e007400200069007300200069006e0063006c0075
00640065006400200074006f00200064006900730070006c006100790020
0061006e00640020007000720069006e007400200063006f006e00740065
006e0074002e00200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002e0068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f0066006f006e00740073002f0064
0065006600610075006c0074002e0061007300700078a92032303135204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e43616c696272692069732061206d6f646572
6e2073616e732073657269662066616d696c79207769746820737562746c
6520726f756e64696e6773206f6e207374656d7320616e6420636f726e65
72732e204974206665617475726573207265616c206974616c6963732c20
736d616c6c20636170732c20616e64206d756c7469706c65206e756d6572
616c20736574732e204974732070726f706f7274696f6e7320616c6c6f77
206869676820696d7061637420696e2074696768746c7920736574206c69
6e6573206f662062696720616e6420736d616c6c207465787420616c696b
652e2043616c696272692773206d616e792063757276657320616e642074
6865206e65772072617374657269736572207465616d20757020696e2062
69676765722073697a657320746f2072657665616c2061207761726d2061
6e6420736f6674206368617261637465722e4d6963726f736f66743a2043
616c6962726920426f6c64204974616c696356657273696f6e20352e3734
43616c696272692d426f6c644974616c696343616c696272692069732061
2074726164656d61726b206f6620746865204d6963726f736f6674206772
6f7570206f6620636f6d70616e6965732e4c756328617329206465204772
6f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479
706f6772617068792f6374666f6e7473687474703a2f2f666f6e74666162
72696b2e636f6d596f75206d617920757365207468697320666f6e742061
73207065726d6974746564206279207468652045554c4120666f72207468
652070726f6475637420696e207768696368207468697320666f6e742069
7320696e636c7564656420746f20646973706c617920616e64207072696e
7420636f6e74656e742e20596f75206d6179206f6e6c792028692920656d
626564207468697320666f6e7420696e20636f6e74656e74206173207065
726d69747465642062792074686520656d62656464696e67207265737472
696374696f6e7320696e636c7564656420696e207468697320666f6e743b
20616e6420286969292074656d706f726172696c7920646f776e6c6f6164
207468697320666f6e7420746f2061207072696e746572206f72206f7468
6572206f75747075742064657669636520746f2068656c70207072696e74
20636f6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e
636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e61
73707800b10903b802a3b21b341fb8029bb21a351fb8028eb21a351fb802
72b219371fb80271b219371fb80270b219371fb8025cb218391fb8025bb2
18391fb8025ab218391fb80223b2173b1fb80222b2173b1fb80221b2173b
1fb80220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8
021cb2173b1fb80219b2173b1fb8021bb2173b1fb80218b2173b1fb80217
b216461fb801e1b216461fb801e0b216461fb801dfb216461fb801deb216
461fb801ddb216461fb801dcb216461fb801dbb216461fb801dab216461f
b801d9b216461fb801d8b216461fb801d7b216461fb801d6b216461fb801
d3b216461fb801d5b216461fb801d4b216461fb801d2b216461fb801d1b2
16461fb801d0b216461fb801ceb216461fb801cdb216461fb801ccb21646
1fb801cbb216461fb801cab216461fb801c9b216461fb801c8b216461fb8
01c7b216461fb801c6b216461fb801c4b216461fb801c3b216461fb801c2
b216461fb801c1b216461fb801bab215461fb801cfb215551fb801b9b215
551fb801b8b215551fb801b7b215551fb801b6b215641fb801b5b215641f
b801b4b215641fb801b3b215641fb801b2b215641fb801c5b215641fb803
34b21f2d1fb80333b21f2d1fb80332b21f2d1fb80331b21f2d1fb80330b2
1f2d1fb8032fb21b341fb8032eb21f2d1fb8030db21e2f1fb8030bb21e2f
1fb802fbb21d301fb802fab21d301fb802f8b21d301fb802f7b21d301fb8
02f6b21d301fb802f5b21d301fb802f4b21d301fb802f3b21d301fb802f2
b21d301fb802dab21c331fb802d9b21c331fb802d8b21c331fb802d7b21c
331fb802d5b21c331fb802d4b21c331fb802d3b21c331fb802b9b21b341f
b8030cb21b341fb802b7b21b341fb802d2b21b341fb802d1b21b341fb802
b6b21b341fb802b4b21b341fb802b8b21a351fb802a2b21a351fb802a1b2
1a351fb802a0b21a351fb802b5b21a351fb8029eb21a351fb802d6b21a35
1fb8029cb21a351fb8029fb219371fb8028cb219371fb8028db219371fb8
0289b2173b1fb80286b219371fb80285b219371fb8026fb218391fb8028b
b218391fb80287b218391fb8026db218391fb8026cb218391fb8026bb218
391fb8026ab2173b1fb80255b2173b1fb80259b2173b1fb80258b2173b1f
b80257b2173b1fb80256b2173b1fb8028ab2173b1fb80253b2173b1fb802
51b2173b1fb8029db2173b1fb8024eb2173b1fb80288b2173b1fb80250b2
173b1fb8024fb2173b1fb8024db2173b1fb8024cb2173b1fb8030fb2173b
1fb8024ab2173b1fb8024bb2173b1fb80216b216461fb80215b216461fb8
026eb216461fb80252b216461fb80214b216461fb80213b216461fb80212
b216461fb80211b216461fb80210b216461fb8020fb216461fb8020eb216
461fb8020db216461fb8020cb216461fb8020bb216461fb8020ab216461f
b80254b216461fb80209b216461fb801c0b215641fb801bfb215641fb803
1eb21f2d1fb8031db21f2d1fb8031cb21f2d1fb8031bb21f2d1fb80319b2
1f2d1fb80318b21f2d1fb80304b21e2f1fb80303b21e2f1fb802e7b21d30
1fb802e6b21d301fb802e5b21d301fb802e4b21d301fb802c7b21c331fb8
02c6b21c331fb802c5b21c331fb802c4b21b341fb802c3b21b341fb802ad
b21b341fb802acb21b341fb802abb21b341fb8031ab21a351fb80236b217
3b1fb80235b2173b1fb80263b216461fb80316b21f2d1fb80315b21f2d1f
b80314b21f2d1fb80313b21f2d1fb80312b21f2d1fb80311b21f2d1fb803
10b21f2d1fb80301b21e2f1fb80300b21e2f1fb802ffb21e2f1fb802fdb2
1e2f1fb802fcb21e2f1fb802e2b21d301fb802e1b21d301fb802e0b21d30
1fb802dfb21d301fb802deb21d301fb802ddb21d301fb802dcb21d301fb8
02dbb21d301fb802c2b21c331fb802c1b21c331fb802c0b21c331fb802bf
b21c331fb802beb21c331fb802bdb21c331fb802bcb21c331fb802bbb21c
331fb802bab21c331fb802a9b21b341fb802a8b21b341fb802a7b21b341f
b802a6b21b341fb802a5b21b341fb802a4b21b341fb802e3b21a351fb802
95b21a351fb80294b21a351fb80291b21a351fb8028fb21a351fb80293b2
19371fb80292b219371fb8027ab219371fb80279b219371fb80278b21937
1fb80277b219371fb80290b219371fb80276b219371fb80275b219371fb8
0274b219371fb80273b219371fb80262b218391fb8025fb218391fb8025e
b218391fb8025db218391fb80261b218391fb80234b2173b1fb80233b217
3b1fb80232b2173b1fb80231b2173b1fb80230b2173b1fb80260b2173b1f
b8022fb2173b1fb8022eb2173b1fb8022db2173b1fb8022bb2173b1fb802
2ab2173b1fb80229b2173b1fb80226b2173b1fb80225b2173b1fb80224b2
173b1fb80228b2173b1fb80227b2173b1fb80302b216461fb8022cb21646
1fb801f6b216461fb801f4b216461fb801f3b216461fb801f2b216461fb8
01f1b216461fb801f0b216461fb801efb216461fb801eeb216461fb801ed
b216461fb801ecb216461fb801ebb216461fb801eab216461fb801e9b216
461fb801e8b216461fb801e7b216461fb801e6b216461fb801e5b216461f
b801f5b216461fb801e4b216461fb801e3b216461fb801e2b216461fb803
2db21f2d1fb8032cb21f2d1fb8032bb21f2d1fb8032ab21f2d1fb80329b2
1f2d1fb80328b21f2d1fb80327b21f2d1fb80325b21f2d1fb80323b21f2d
1fb80322b21f2d1fb80321b21f2d1fb8031fb21f2d1fb8030ab21e2f1fb8
0309b21e2f1fb80308b21e2f1fb80307b21e2f1fb80306b21e2f1fb802f1
b21d301fb802f0b21d301fb802efb21d301fb802eeb21d301fb802edb21d
301fb802ecb21d301fb802eab21d301fb802e9b21d301fb802e8b21d301f
b802cfb21c331fb802ceb21c331fb802ebb21c331fb802d0b21c331fb802
cdb21c331fb802ccb21b341fb802cab21b341fb802c9b21b341fb802c8b2
1b341fb80326b21b341fb802b2b21a351fb802b0b21a351fb802afb21a35
1fb802aeb21a351fb8029ab21a351fb80299b21a351fb80298b21a351fb8
02cbb21a351fb802aab21a351fb80305b219371fb80296b219371fb80283
b219371fb80280b219371fb80281b219371fb8027fb219371fb8027eb219
371fb80265b218391fb802b3b218391fb80269b218391fb80268b2173b1f
b80266b2173b1fb80264b2173b1fb802b1b2173b1fb80245b2173b1fb802
48b2173b1fb80242b2173b1fb80241b2173b1fb80240b2173b1fb8023fb2
173b1fb80284b2173b1fb80282b2173b1fb80297b2173b1fb8023cb2173b
1fb8023eb2173b1fb8023bb2173b1fb8023ab2173b1fb80239b2173b1fb8
0249b2173b1fb80247b2173b1fb80246b2173b1fb80238b2173b1fb80237
b2173b1fb80208b216461fb80207b216461fb8023db216461fb80206b216
461fb80205b216461fb80204b216461fb80203b216461fb80202b216461f
b80201b216461fb80244b216461fb80243b216461fb80200b216461fb802
7bb216461fb801ffb216461fb801feb216461fb80267b216461fb801fdb2
16461fb801fcb216461fb801fbb216461fb801fab216461fb801f9b21646
1fb801f8b216461fb801beb215641fb801bdb215641fb801bcb215641fb8
01bbb215641fb801b1b2148b1fb801b0b2148b1fb8027db219371fb8027c
b219371fb8011e40c710421ff70e481ff60e481ff50d4a1fe20d4a1fe10d
4a1fe00c4e1fc50c4e1fc40c4e1fc30c4e1fc20c4e1fc10c4e1fc00c4e1f
bf0b561fbe0b561fb40b561fb30b561fb20b561fb10b561fb00b561faf0b
561fae0b561fad0b561fac0b561fab0b561faa0b561fa90b561fa80b561f
a70b561fa60b561fa50b561fa40b561fa30b561fa10a681fa00a681f9f0a
681f9e0a681f9d0a681f9c0a681f9b0a681f9a0a681f990a681f980a681f
970a681f960a681f9509771f9109771f9009771f8f09771f8e09771fb903
530350400a561f8d09771f8c09651f4109035203500068001f0351035000
68001f01a2b213321fb801a1b213321fb801a0b212371fb8019fb212371f
b80191b212371fb80190b211401fb8018fb211401fb8018eb211401fb801
8db211401fb8018cb211401fb8018bb211401fb8018ab211401fb80189b2
11401fb80188b211401fb80187b211401fb8014eb211401fb8014db21042
1fb8014cb210421fb8014bb210421fb8014ab210421fb80149b210421fb8
0148b210421fb80147b210421fb80146b210421fb80145b210421fb80144
b20f451fb80143b20f451fb80142b20f451fb8011db20f451fb8011cb20f
451fb8011bb20f451fb8011ab20f451fb80119b20f451fb80118b20e481f
b80117b20e481fb80116b20e481fb80115b20e481fb80114b20e481fb801
13b20e481fb80112b20d4a1fb8011140570d4a1ff40d4a1ff30d4a1ff20d
4a1ff10d4a1ff00d4a1fef0d4a1fee0c4e1fdf0c4e1fde0c4e1fdd0c4e1f
dc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fbd0b561fbc0b561fba0b
561fb90b561fa20a681f9409771fb80199b213321fb80198b213321fb801
69b211401fb80168b211401fb80167b211401fb80166b211401fb80165b2
11401fb80164b211401fb80163b211401fb80162b211401fb80161b21140
1fb80160b211401fb80135b211401fb80134b210421fb80133b210421fb8
0132b210421fb80131b210421fb80130b210421fb8012fb210421fb8012e
b210421fb8012db20f451fb8012cb20f451fb80107b20f451fb80106b20f
451fb80105b20f451fb9034f034eb23b1f34bf034e0044034e0054034e00
03ffc0034eb2292c46b9ffc0034eb2121646b801adb213141fb801acb213
1b1fb801abb2131b1fb801aab213231fb801a9b213231fb801a8b213231f
b801a7b213321fb801a6b213321fb801a5b213321fb801a4b213321fb801
a3b213321fb80197b213321fb80196b213321fb80195b213321fb80194b2
12371fb80193b212371fb80192b212371fb8015fb212371fb8015eb21140
1fb8015db211401fb8015cb211401fb8015bb211401fb8015ab211401fb8
0159b211401fb80158b211401fb80157b211401fb80156b211401fb80155
b211401fb80154b211401fb80153b211401fb80152b211401fb80151b211
401fb80150b211401fb8014fb211401fb8012bb211401fb8012ab210421f
b80129b210421fb80128b210421fb80127b210421fb80126b210421fb801
25b210421fb80124b210421fb80123b210421fb80122b210421fb80121b2
0f451fb80120b20f451fb8011fb20f451fb80104b20f451fb80103b20f45
1fb80102b20f451fb80101b20f451fb8010040830e481fff0e481ffe0e48
1ffd0e481ffc0e481ffb0e481ffa0d4a1ff90d4a1ff80d4a1fec0d4a1feb
0d4a1fea0d4a1fe90d4a1fe80d4a1fe70d4a1fe60c4e1fe50c4e1fe40c4e
1fe30c4e1fcf0c4e1fce0c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc9
0c4e1fc80c4e1fc70c4e1fc60c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb801afb213321fb801aeb213321fb8019eb213321fb8019db213321fb8
019cb212371fb8019bb212371fb8019ab212371fb80186b212371fb80185
b2112e1fb80184b211401fb80183b211401fb80182b211401fb80181b211
401fb80180b211401fb8017fb211401fb8017eb211401fb8017db211401f
b8017cb211401fb8017bb211401fb8017ab211401fb80179b211401fb801
78b211401fb80177b211401fb80176b211401fb80175b211401fb80174b2
11401fb80173b211401fb80172b211401fb80171b211401fb80170b21140
1fb8016fb211401fb8016eb211401fb8016db211401fb8016cb211401fb8
0141b211401fb80140b210421fb8013fb210421fb8013eb210421fb8013d
b210421fb8013cb210421fb8013bb210421fb8013ab210421fb80139b210
421fb80138b210421fb80137b20f451fb80136b20f451fb80110b20f451f
b8010fb20f451fb8010eb20f451fb8010db20f451fb8010cb20f451fb801
0bb20e481fb8010ab20e481fb80109b20e481fb80108402f0e481fed0c4e
1fd70c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd0
0b561f9309771f9209771fb8016bb212371fb8016a406e11401f8503251f
84032e1f83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d
030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948
775578ab77550b77010c764875555475e475f47503147554756475747594
75d475e47507a475b475c47503b8ffc0401275383b468075907502147574
75020075010fb8ffc04020750b0e467448725573ab725504722472547203
39f07201024072016072707202b8ffc0b372242846b8ffc0401b72161a46
2072407250720371486f5570ab6f556e486d55ef6d0110410a0355002003
5500d003550003000f0354008f035440ff02006c706c02096a03251f692e
675568ab6755662e645565ab6455632e6255612e60555f2e5d555eab5d55
5c2e5a555bab5a55592e58555703251f562e545555ab5455532e515552ab
51554f2e4e554e03251f4d2e4b554cab4b554a2e485549ab485550480147
2e46554503361f001f01001e01001e701e801ef01e040b601d701d02701d
e01df01d03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a02
0f191f198f199f19af19050f198f199f19030c7012801202701180110230
114011d011e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04
af0f01af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e3146
0f0d404b1f0d2f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d242746
3f0c4f0c5f0c039f0c01400c262946ef0aff0a02400a2427464009262d46
4009171b460003012001010001100120010308b8ffc0b401151f4603bd01
00010000050001019000542b4bb807ff524bb008505bb00188b02553b001
88b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58
b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b203
40401d42594bb0ff5358b20300001d42592b5e7375732b2b2b732b73742b
2b73745e732b5e7374757374755e73747573015e7374737475757473745e
737473002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
5e737473732b2b2b732b2b73755f755e732b2b2b5e7373732b7374752b5e
732b2b5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b742b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b185f5e0000>
[1659 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> KTBBAA+Calibri,BoldItalic AddT42Char 
1 0 0 <00050000fe7303e0050e00030007003b00550056004fb52d162d16083c41
0a023a0049000701b00002002002000008000101b1401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103e0fc4f03
46fd240276204468481e032d25161f1207011905231a0b2f4228120d1d2f
23263a291a06080704060a07082737422245674422fecb04080e090e2b20
1c23130604090f0b0d29211a221307fe26050efaf2050efb570444fbbc03
1136654e3306790d0b02050908a7211b1e303b1e14251d110d0f0d0e0e07
1c1f1c0707120f0a233d51fd9e091c201d0a0d0e0910150c0b1d1f1e0a0e
0c080f16fd21>KTBBAA+Calibri,BoldItalic AddT42Char 
KTBBAA+Calibri,BoldItalic /CharStrings get begin
/space 3 def
end
KTBBAA+Calibri,BoldItalic /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/UAZDMY+Calibri,BoldItalic /KTBBAA+Calibri,BoldItalic findfont ct_VMDictPut
/UAZDMY+Calibri,BoldItalic*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
UAZDMY+Calibri,BoldItalic nf
UAZDMY+Calibri,BoldItalic*1 [18 0 0 -18 0 0 ]msf
450.05 199.73 mo
( )sh
%ADOBeginSubsetFont: KNRAAA+Calibri,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.012
 256 array 0 1 255 {1 index exch /.notdef put} for  /KNRAAA+Calibri,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dfb846000000cc000000606376
7420ba7ecec70000012c000005146670676da1ea42ac0000064000000913
676c79661f36f8860000747c0000140c68656164f177042b00000f540000
0036686865610da90eea00000f8c00000024686d74784b8d058b00000fb0
0000275c6c6f636117f81ecf0000370c00001ee06d61787019d411aa0000
55ec000000206e616d65cd0047720000560c00000d6870726570ad24c96a
0000637400001106676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e00002ff4000acff00000001000000004d53202000010000
00a00600fe0001c4079e02262000019f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e40465f5e5d5c5b5a59585554535251504f4e4d4c
4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625
2423221f181411100f0d0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045b0
0325456164b050515845441b2121592d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c
4565b02c234445b02b23442d2c4b525845441b2121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2c4523456023456023456023766818b08062202d2cb00426b00426
b00425b0042545234520b003266062636820b0032661658a2344442d2c20
45b0005458b040442045b04061441b2121592d2c45b1302f4523456160b0
016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325
45695358441b2121591b2121592d2c45b01443b0006063b0016069442d2c
b02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033ff
e0b134201bb3330034005944442d2cb0164358b00326458a586466b01f60
1b64b020606620581b21b04059b001615923586559b02923442310b029e0
1b2121212121592d2cb0164358b004254564b020606620581b21b04059b0
016123586559b0292344b00425b00725082058021b0359b0052510b00425
2046b0042523423cb0072510b006252046b00425b0016023423c2058011b
0059b0052510b00425b029e0b0072510b00625b029e0b00425b007250820
58021b0359b00425b003254348b00625b00325b0016043481b2159212121
212121212d2cb0164358b004254564b020606620581b21b04059b0016123
581b6559b0292344b00525b00825082058021b0359b0042510b005252046
b0042523423cb00425b0072508b0072510b006252046b00425b001602342
3c2058011b0059b0042510b00525b029e0b02920456544b0072510b00625
b029e0b00525b00825082058021b0359b00525b003254348b00425b00725
08b00625b00325b0016043481b2159212121212121212d2c02b004252020
46b004252342b0052508b003254548212121212d2c02b0032520b0042508
b0022543482121212d2c452320451820b00050205823652359236820b040
505821b04059235865598a60442d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d2c
b002435458b0472b1b212121592d2cb002435458b0482b1b21212121592d
2cb002435458b0492b1b212121592d2c208a08234b538a4b515a5823381b
2121592d2c0020b200400325b0062649618b3812342d2c01462346602346
6123201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a
2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2c451868234b51582320452064b04050587c5968
8a6059442d2cb00016b00225b0022501b001233e00b002233eb10102060c
b00a236542b00b234201b001233f00b002233fb10102060cb006236542b0
072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b004
2510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58b0
092b5920b005254ab0042547b004254760b0062547b0806361b00225b000
5558b00325b00725496359b0082558001b0159b00425b0062549b009255c
b009255a58b0092b59b0072546b0806361b0032520b0005558631b215961
2320b0005558b080631b21b08059b0592bb006255c586959b00425202010
b00048233ab0062658001b0159b0052658b003252f598a12233221212d2c
b00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b007
2559b00225b00225070cb005256323b00625636020b94000040063535821
b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1bb0
0426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b
2eb00525b0052507595920b0005558b00525b0052587b00725b007250bb0
092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b00825
b00b254923b00625b0062587b00a2510b00b25c15920b00051b800522378
b00161b00225b00725b0072507b00a25b00d254961b08062b00525b00525
0bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b006
25b0062507b00925b00c2549b0032554b8ffa72379212121212121212121
2121212d2c23b0005458b9400000001bb900004000598ab0005458b94000
00001bb90000400059b05b2b2d2c08b0005458b9400000001bb900004000
590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b
2b2d2cb00426b00426080db00426b00426080db05b2b2d00000100000005
bd717d8c14615f0f3cf50019080000000000bbeb7ccc00000000d20f7f09
fa34fdcb0a14081c000200090002000000000000000100000600fe0001c4
0aa0fa34fa0b0a140800019a000000000000000000000000043f040e0000
000000000000000001cf0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000042e0073000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000004fc005200000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000006d7
0052052800520000000000000000000000000000000000000000053c0072
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000041d0051000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000041d003f00000000
0000000000000000000000000000000000000000041b004e000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002be003f000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000029b00bb00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000026d0075026dffdb0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000033500f70575000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
040e002000000000040e0018000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000003fc005900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
012801280128012801280128012801280128012801280128012801280128
0128012801280128012801280128012801280128012801cd01cd01cd01cd
01cd01cd01cd01cd01cd01cd01cd01cd01cd01cd01cd01cd01cd01cd01cd
01cd01cd01cd01cd01cd027e037e037e037e037e037e037e03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec048904890489048904890489
048904890489048904890489048904890489048904890489048904890489
048904890489048904890489048904890489048904890489048904890489
048904890489048904890489048904890489048904890489048904890489
048904890489048904890489048904890489048904890489048904890489
048904890489048904890489048904890489048904890489048904890489
04890489048904890489048904890489048904890489051c051c051c051c
051c051c051c058a058a058a058a058a058a058a058a058a058a058a058a
058a058a058a060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b060b
060b060b060b060b060b060b060b060b060b060b060b060b060b060b0670
067006700670067006700670067006700670067006700670067006700670
067006700670067006700670067006700670067006700670067006700670
067006700670067006700670067006700670067006700670067006700670
06700670067006700670067006c307160716071607160716071607160716
071607160716071607160716071607160716071607160716071607160716
071607720847084708470847084708470847084708470847084708470847
084708470847084708470847084708470847084708470847084708470847
084708470847084708470847084708470847084708470847084708470847
084708470847084708470847084708470847084708470847084708470847
084708470847084708470847084708470847084708470847084708470847
084708470847084708470847084708470847084708470847084708f608f6
09a609a609a609a609a609a609a609a609a609a609a609a609a609a609a6
09a609a609a609a609a609a609a609a609a609a609a609a609a609a609a6
09a609a609a609a609a609a609a609a609a609a609a609a609a609a609a6
09a609a609a609a609a609a609a609a609a609a609a609a609a609a609a6
09a609a609a609a609a609a609a609a609a609a609a609a609a609a609a6
09a609a60a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a060a060a060a060a060a060a060a060a060a060a060a060a06
0a060a060a06000100000f6f007300050000000000020010002f00600000
09ef1106000000000000002d022200000003000000000064000000000003
00000001000e00640000000300000002000c032a00000003000000030032
03040000000300000004001c031a00000003000000050018033600000003
00000006001c034e00000003000000070076036a0000000300000008002a
000e0000000300000009002003e0000000030000000a02a0006400000003
0000000b00560400000000030000000c002a0456000000030000000d0298
0480000000030000000e006c071800010000000000000032078400010000
00000001000707b600010000000000020006091900010000000000030019
09060001000000000004000e09110001000000000005000c091f00010000
00000006000e092b0001000000000007003b093900010000000000080015
078b000100000000000900100974000100000000000a015007b600010000
0000000b002b0984000100000000000c001509af000100000000000d014c
09c4000100000000000e00360b1000030001040900000064000000030001
04090001000e00640003000104090002000c032a00030001040900030032
03040003000104090004001c031a00030001040900050018033600030001
04090006001c034e00030001040900070076036a0003000104090008002a
000e0003000104090009002003e0000300010409000a02a0006400030001
0409000b00560400000300010409000c002a0456000300010409000d0298
0480000300010409000e006c071800a9002000320030003100350020004d
006900630072006f0073006f0066007400200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e00430061006c
0069006200720069002000690073002000610020006d006f006400650072
006e002000730061006e0073002000730065007200690066002000660061
006d0069006c00790020007700690074006800200073007500620074006c
006500200072006f0075006e00640069006e006700730020006f006e0020
007300740065006d007300200061006e006400200063006f0072006e0065
00720073002e002000490074002000660065006100740075007200650073
0020007200650061006c0020006900740061006c006900630073002c0020
0073006d0061006c006c00200063006100700073002c00200061006e0064
0020006d0075006c007400690070006c00650020006e0075006d00650072
0061006c00200073006500740073002e0020004900740073002000700072
006f0070006f007200740069006f006e007300200061006c006c006f0077
0020006800690067006800200069006d007000610063007400200069006e
002000740069006700680074006c007900200073006500740020006c0069
006e006500730020006f0066002000620069006700200061006e00640020
0073006d0061006c006c0020007400650078007400200061006c0069006b
0065002e002000430061006c0069006200720069002700730020006d0061
006e0079002000630075007200760065007300200061006e006400200074
006800650020006e00650077002000720061007300740065007200690073
006500720020007400650061006d00200075007000200069006e00200062
00690067006700650072002000730069007a0065007300200074006f0020
00720065007600650061006c002000610020007700610072006d00200061
006e006400200073006f0066007400200063006800610072006100630074
00650072002e004d006900630072006f0073006f00660074003a00200043
0061006c00690062007200690020004900740061006c0069006300560065
007200730069006f006e00200035002e0037003400430061006c00690062
00720069002d004900740061006c0069006300430061006c006900620072
006900200069007300200061002000740072006100640065006d00610072
006b0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000670072006f007500700020006f006600200063006f
006d00700061006e006900650073002e004c007500630028006100730029
002000640065002000470072006f006f00740068007400740070003a002f
002f007700770077002e006d006900630072006f0073006f00660074002e
0063006f006d002f007400790070006f006700720061007000680079002f
006300740066006f006e007400730068007400740070003a002f002f0066
006f006e007400660061006200720069006b002e0063006f006d0059006f
00750020006d006100790020007500730065002000740068006900730020
0066006f006e00740020006100730020007000650072006d006900740074
006500640020006200790020007400680065002000450055004c00410020
0066006f00720020007400680065002000700072006f0064007500630074
00200069006e002000770068006900630068002000740068006900730020
0066006f006e007400200069007300200069006e0063006c007500640065
006400200074006f00200064006900730070006c0061007900200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
0068007400740070003a002f002f007700770077002e006d006900630072
006f0073006f00660074002e0063006f006d002f007400790070006f0067
00720061007000680079002f0066006f006e00740073002f006400650066
00610075006c0074002e0061007300700078a92032303135204d6963726f
736f667420436f72706f726174696f6e2e20416c6c205269676874732052
657365727665642e43616c696272692069732061206d6f6465726e207361
6e732073657269662066616d696c79207769746820737562746c6520726f
756e64696e6773206f6e207374656d7320616e6420636f726e6572732e20
4974206665617475726573207265616c206974616c6963732c20736d616c
6c20636170732c20616e64206d756c7469706c65206e756d6572616c2073
6574732e204974732070726f706f7274696f6e7320616c6c6f7720686967
6820696d7061637420696e2074696768746c7920736574206c696e657320
6f662062696720616e6420736d616c6c207465787420616c696b652e2043
616c696272692773206d616e792063757276657320616e6420746865206e
65772072617374657269736572207465616d20757020696e206269676765
722073697a657320746f2072657665616c2061207761726d20616e642073
6f6674206368617261637465722e4d6963726f736f66743a2043616c6962
7269204974616c696356657273696f6e20352e373443616c696272692d49
74616c696343616c6962726920697320612074726164656d61726b206f66
20746865204d6963726f736f66742067726f7570206f6620636f6d70616e
6965732e4c7563286173292064652047726f6f74687474703a2f2f777777
2e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374666f
6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f75206d61
7920757365207468697320666f6e74206173207065726d69747465642062
79207468652045554c4120666f72207468652070726f6475637420696e20
7768696368207468697320666f6e7420697320696e636c7564656420746f
20646973706c617920616e64207072696e7420636f6e74656e742e20596f
75206d6179206f6e6c792028692920656d626564207468697320666f6e74
20696e20636f6e74656e74206173207065726d6974746564206279207468
6520656d62656464696e67207265737472696374696f6e7320696e636c75
64656420696e207468697320666f6e743b20616e6420286969292074656d
706f726172696c7920646f776e6c6f6164207468697320666f6e7420746f
2061207072696e746572206f72206f74686572206f757470757420646576
69636520746f2068656c70207072696e7420636f6e74656e742e68747470
3a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068
792f666f6e74732f64656661756c742e61737078b10903b8027ab21e3e1f
b80279b21e3e1fb80278b21e0b1fb80277b21e0b1fb80276b21e3a1fb802
75b21e3a1fb80274b21e3e1fb80273b21e3b1fb80272b21e3c1fb80271b2
1e3c1fb80270b21e3c1fb8026fb21e3d1fb8026eb21e3d1fb8026db21e3e
1fb8026cb21e3e1fb8026bb21d411fb8026ab21d411fb80269b21d421fb8
0268b21d431fb80267b21d431fb80266b21d431fb80265b21d431fb80264
b21d431fb80263b21d411fb80262b21d421fb80261b21d421fb80260b21d
431fb8025fb21d431fb8025eb21c451fb8025db21c451fb8025cb21c451f
b8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb802
57b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80252b2
1c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c44
1fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21c451fb8
0249b21c451fb80248b21c451fb80247b21c451fb80246b21c451fb80245
b21c451fb80244b21b491fb80243b21b4a1fb80242b21b4a1fb80241b21b
4a1fb80240b21b4b1fb8023fb21b4b1fb8023eb21b4c1fb8023db21b4c1f
b8023cb21b4c1fb8023bb21b4c1fb8023ab21b4c1fb80253b21b4c1fb802
39b21b491fb80238b21b491fb80237b21b4a1fb80236b21b4a1fb80235b2
1b4a1fb80234b21b4b1fb80233b21b4b1fb80232b21b4c1fb80231b21b4c
1fb80230b21b4c1fb8022fb21b4c1fb8022eb21b4c1fb8022db21b491fb8
022cb21b4a1fb8022bb21b4b1fb8022ab21b4c1fb80229b21b4c1fb80228
b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b
4a1fb80223b21b4b1fb80222b21b4c1fb80221b21b4c1fb80220b21b4c1f
b8021fb21b4c1fb8021eb21b4c1fb8021db21a4e1fb8021cb21a4e1fb802
1bb21a4f1fb8021ab21a4f1fb80219b21a4f1fb80218b21a4e1fb80217b2
1a4e1fb80216b21a4f1fb80215b21a4f1fb80214b21a4f1fb80213b21a4e
1fb80212b21a4e1fb80211b21a4f1fb80210b21a4e1fb8020fb21a4e1fb8
020eb21a4f1fb8020db21a4f1fb8020cb21a4f1fb8020bb21a4f1fb8020a
b21a4f1fb80209b219501fb80208b219511fb80207b219511fb80206b219
511fb80205b219511fb80204b219501fb80203b219511fb80202b219511f
b80201b219511fb80200b219511fb801ffb219511fb801feb219511fb801
fdb219501fb801fcb219511fb801fbb219511fb801fab219511fb801f9b2
19511fb801f8b219511fb801f7b219511fb801f6b218531fb801f5b21853
1fb801f4b218541fb801f3b218541fb801f2b218541fb801f1b218541fb8
01f0b218531fb801efb218531fb801eeb218541fb801edb218541fb801ec
b218541fb801ebb218541fb801eab218531fb801e9b218531fb801e8b218
531fb801e7b218541fb801e6b218541fb801e5b218541fb801e4b218541f
b801e3b218531fb801e2b218531fb801e1b218541fb801e0b218541fb801
dfb218541fb801deb218541fb801ddb217561fb801dcb217561fb801dbb2
17571fb801dab217571fb801d9b217561fb801d8b217561fb801d7b21757
1fb801d6b217571fb801d5b217571fb801d4b217571fb801d3b217561fb8
01d2b217571fb801d1b217561fb801d0b217561fb801cfb217571fb801ce
b217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab217
561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b217571f
b801c5b217571fb801c4b2163e1fb801c3b2163f1fb801c2b2163f1fb801
c1b2165b1fb801c0b2165b1fb801bfb2165b1fb801beb2165b1fb801bdb2
165b1fb801bcb2165b1fb801bbb2165b1fb801bab2163f1fb801b9b2163f
1fb801b8b2165b1fb801b7b2165b1fb801b6b2165b1fb801b5b2165b1fb8
01b4b2165b1fb801b3b2165b1fb801b2b2165b1fb801b1b2163f1fb801b0
b2163e1fb801afb2163f1fb801aeb2163f1fb801adb2165b1fb801acb216
5b1fb801abb2165b1fb801aab2165b1fb801a9b2165b1fb801a8b2163e1f
b801a7b2163f1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801
a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2
165b1fb8019eb215621fb8019db215621fb8019cb215631fb8019bb21564
1fb8019ab215651fb80199b215661fb80198b215661fb80197b215661fb8
0196b215661fb80195b215661fb80194b215661fb80193b215661fb80192
b215611fb80191b215621fb80190b215631fb8018fb215641fb8018eb215
641fb8018db215651fb8018cb215661fb8018bb215661fb8018ab215631f
b80189b215641fb80188b215551fb80187b215611fb80186b215621fb801
85b215621fb80184b215631fb80183b215651fb80182b215661fb80181b2
15661fb80180b215661fb8017fb215661fb8017eb215661fb8017db21566
1fb8017cb215661fb8017bb215661fb8017ab215451fb80179b215611fb8
0178b215621fb80177b215621fb80176b215631fb80175b215641fb80174
b215641fb80173b215651fb80172b215661fb80171b215661fb80170b215
661fb8016fb215661fb8016eb215661fb8016db215661fb8016cb215661f
b8016bb215551fb8016ab215451fb80169b215451fb80168b215361fb801
67b215361fb80166b214821fb80165b214561fb80164b2147f1fb80163b2
14551fb80162b214561fb80161b214401fb80160b214551fb8015fb21456
1fb8015eb2147e1fb8015db214831fb8015cb214851fb8015bb2133d1fb8
015ab2131e1fb80159b2131e1fb80158b2130a1fb80157b2130a1fb80156
b2130b1fb80155b2133a1fb80154b2133a1fb80153b2133a1fb80152b213
3b1fb80151b2133c1fb80150b2133c1fb8014fb212451fb8014eb212461f
b8014db212461fb8014cb212451fb8014bb212451fb8014ab212461fb801
49b212461fb80148b212461fb80147b212441fb80146b212451fb80145b2
12461fb80144b212461fb80143b211471fb80142b211571fb80141b21158
1fb80140b211591fb8013fb2115a1fb8013eb2115a1fb8013db2115b1fb8
013cb2115b1fb8013bb2115b1fb8013ab2115b1fb80139b2112b1fb80138
b2112c1fb80137b211391fb80136b211391fb80135b211461fb80134b211
471fb80133b211471fb80132b211551fb80131b211551fb80130b211561f
b8012fb211561fb8012eb211571fb8012db211571fb8012cb211581fb801
2bb211591fb8012ab211591fb80129b2115a1fb80128b2115a1fb80127b2
115b1fb80126b2115b1fb80125b2115b1fb80124b2115b1fb80123b21159
1fb80122b2115a1fb80121b211391fb80120b211471fb8011fb211561fb8
011eb211561fb8011db211591fb8011cb211591fb8011bb2115b1fb8011a
b2115b1fb80119b2115b1fb80118b211561fb80117b211561fb80116b211
571fb80115b211571fb80114b211581fb80113b2115a1fb80112b2115a1f
b80111b2115b1fb80110b2115b1fb8010fb2115b1fb8010eb2115b1fb801
0db2115a1fb8010cb2115b1fb8010bb2105d1fb8010ab2105e1fb80109b2
105f1fb80108b2105f1fb80107b2105f1fb80106b2105f1fb80105b2105d
1fb80104b2105e1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8
010040ff105f1fff105d1ffe105f1ffd105f1ffc105f1ffb105f1ffa105d
1ff9105e1ff8105f1ff7105f1ff6105f1ff5105f1ff40f621ff30f621ff2
0f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f63
1fea0f641fe90f641fe80f641fe70f641fe60f621fe50f621fe40f641fe3
0f621fe20f621fe10f631fe00f641fdf0f641fde0f641fdd0f641fdc0f64
1fdb0f641fda0e671fd90e681fd80e681fd70e681fd60e681fd50e671fd4
0e681fd30e681fd20e681fd10e671fd00e681fcf0e681fce0e681fcd0e68
1fcc0e681fcb0e681fca0e681fc90e681fc80d6b1fc70d6c1fc60d2a1fc5
0d6c1fc40d2c1fc30d6b1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d691fbe
0d681fbd0d6b1fbc0d311fbb0d311fba0d311fb90c711fb80c721fb70c73
1fb60c741fb50c741fb40c741fb30c731fb20c741fb10d311fb00d311faf
0d311fae0d311fad0d311fac0d311fab0d311faa0d311fa90b7e1fa80b7a
1fa70b791fa60b7a1fa50b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e1fa0
0b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f990b2d
1f980aa71f970aa51f960aa71f950aa71f940aa71f930aa71f920a681f91
0a821f900a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c0aa71f8503251f840338
1f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d
7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba028900
660288403c5576ab755504751475747503f47501ab750144750130750102
007510752075030c7455725573ab7255007250728072b072043bb072e072
020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f55
6e666d556a03251f6938675568ab67556638645565ab6455633862556138
60555f385d555eab5d555c385a555bab5a55593858555703251f56385455
55ab54555338515552ab51554f384e554e03251f4d384b554cab4b554a38
485549ab4855473846554503381f001c101c201c0310b8ffc0404e1c1b1e
46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f19
01434f19016f197f198f19030f18cf18024018292c460f17cf17df17ef17
04134017292e460016101620160315b8ffc0b3164d5446b8ffc0b3163f44
46b8ffc0b316313546b8ffc0404d162326460f15010f151f1502451f1501
0011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e
020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d3137
46b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d30
460003012001010001100120010308b8ffc0b401151f4603bd0100010000
050001019000542b4bb807ff524bb008505bb00188b02553b00188b04051
5ab00688b000555a5b58b101018e59b101024354b0144b515a58b101018e
59858d8d001d424bb01d5358b203a0a01d42594bb0805358b20340401d42
594bb0ff5358b20300001d42592b5e7375732b2b745e732b2b5e73742b73
742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e735e735e
73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e
73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e0000
00>
[5133 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> KNRAAA+Calibri,Italic AddT42Char 
1 3812 920 <00040000ffee04d9054a0049005d007100720074b9002c01e84009333e38
28234a043e59bb021f0012001e0223400e4f6d5e0d0312004f124f124f3e
63b80224401a08006d38285e23300d4a090354e21972513bfa454d68f703
4d28ba027f028000582b2b3fed3fed3fd4ed121739012fedc439392f2f11
3912173910ed10ed11173910d4ed313025060623222e0235343e02372e03
35343e0433321e0215140e02071e03173e06333216140e03071616333216
07140e0423222e02013e0335342e0223220e0215141e02070e0315141e02
33323e02372e0301038861e07b598e63352856875f1c24130811263e5c7d
515e7e4d212862a67e203d40432637491c0509141f192c20122034462b40
531f150e0104080a0e2213132f3b4afe93667e46190e243d314558351606
0f1a3b3b5c3e2116365842285350481f2a4b4744fde6864652294e6e433e
79726b303357483915214c4b44351f274050283b6c6a6e3b355952502a3f
896c240f09040b1a556369662d3d370c0f071c1f1b0e0910233a02c53052
4a442210272216273b431c132c3741e61f444d57322140321e111d29182e
595c6202e000>KNRAAA+Calibri,Italic AddT42Char 
1 3296 894 <00010075fea702b0058b0025002db900140186b20a051cbb01cd00000017
01fab405210f8528ba027f028000582b2b3f2f012fedd6ed10deed313001
060a0215141e0217160e0223222e0227260235341a02373e033332161614
02a96d985f2c070d150e03010e1e191119110902252d29609e75040d1520
17171c0f0562a5febbfecafedd8235757775330c110b0502060805730103
96810116012a013fa8070a0703060a10>KNRAAA+Calibri,Italic AddT42Char 
1 3462 895 <0001ffdbfea70216058b0025002db900140186b20a051cbb01ce00000017
01fbb40521850f28ba027f028000582b2b2f3f012fedd6ed10deed313003
361a0235342e0227263e0233321e0217161215140a02070e032322262634
1f6d985f2c070d150e03020d1e191219110802252e29619d75050d152017
171c0efed0a40145013801228235757774340b110c050305080672fefd97
81feebfed6fec1a9060a0703060a0f00>KNRAAA+Calibri,Italic AddT42Char 
1 4940 1085 <00010059006c03d00416002f0032b1002bb801bab2211809b801bab31326
202cb80105b3140e0828ba027d027e00582b2b2fcdc4fdc4cd012fedc4d4
fdc4313001140e042321030e0323222e02371321222635343e043321133e
0333321e02070321321603d00305090c110afeb84a010a131d15141c0f06
014afeb80c0f0205090b110a014949020a131e14151b1005024901490d0e
026106141818130cfe94080b080505080b08016c111506151817130c016c
080d090505090d08fe941300>KNRAAA+Calibri,Italic AddT42Char 
1 4238 1006 <00010020000003ca0521004300a6ba027d027e00582bb10102435558b900
45ffc040090f024d0045010f0340b80230b71212270027000d1ab80264b2
380d2ebb01300024001f012c40091a133f030833531240b80126b3400854
282b183f1a4dfdc13f121739fdd4ed012fd4ed1239392f2f3910ed31305f
5e5d2b1bb50045010f032ebb01300024001f012c40091a133f0308335312
40b80126b3400854282b183f1a4dfdc13f121739fdd4ed3130015f5e5d59
25140e042321222e0235343e0237013e0535342e0223220e022322263534
3e04373e0333321e0215140e04070721321603520306090d100afd350d12
0a05030c1815014d4e714d2e1a080f254434396854390b0a0c030307090b
070b415c703c607e491d0c233f658f63fa0228110e6906161718120c060b
0f0a0a20262712012444776757483b171837302022292314130813161614
13070b2422193652602b29565f6a7b8f54d61900>KNRAAA+Calibri,Italic AddT42Char 
1 4588 1008 <00020018fffa03c30514002e003200c5ba027d027e00582bb10102435558
b90034ffc040300f024d0034010f033214132f132b08092a0909132a2f2f
20311f1f1a202f132f132f001a2f302a0314200e25522b1f32b801044009
4009130e140e5508282b182f3f2f1239391a4dfd32c43f1239121739012f
cd39392f2f123912391133113311331133107d87c4c41087c4c43130015f
5e5d2b1b40110034010f032f302a0314200e25522b1f32b8010440094009
130e140e5508282b182f3f2f1239391a4dfd32c43f12391217393130015f
5e5d5901140e042323030e0323222e02371321222635343e0437013e0333
321e0207033332160323012103c30306090d10099236020a162118191f11
060335fdea140f0205080a0d0902700617212e1f212f1e0d01a6920f0cc9
02fdd501a2019108141817120bfef0080b080404080b080110121207161a
1d1c1a0b0313080c080305080d09fcc61502d2fd4300>KNRAAA+Calibri,Italic AddT42Char 
1 336 18 <00010073fff00479051e00380069ba027d027e00582bb10102435558b31d
1d0010b80255b62d041a041a1509b8012ab2345315b8012cb3402856282b
183f1a4ded3fed1139392f2f012fedc4392f31301bb5041a041a1509b801
2ab2345315b8012cb3402856282b183f1a4ded3fed1139392f2f31305901
14060623222e0223220e0415141e0233323e0233321615140e0823222e02
35343e0433321e0204790e170d0e2640654c548a6f54371c284c6e464e71
5136110b0a0304050809154361794466a4733f284e759bc274497f5a2804
8a153e24252b253f6b8c999c46507d562c232b2310100513161a17131427
23193d77b1735fc9bea87f4921322700>KNRAAA+Calibri,Italic AddT42Char 
1 592 44 <00010052fffa04f20514002f00baba027d027e00582bb101024355584016
230c0d220d220d1817240b0a25002f250a172a522423b8012a401d400b18
252f22041d170a000d0428000c0116030c0c121d5212550555282b183f3f
3f12392f005f5e5d2b1739121739c41a4dfdc43f012fd0c132337d87c4c4
011810c63332107d87c4c431301bb32a522423b8012a401d400b18252f22
041d170a000d0428000c0116030c0c121d5212550555282b183f3f3f1239
2f005f5e5d2b1739121739c41a4dfdc43f313059250e0323222e02371321
030e0323222e0237133e0333321e02070321133e0333321e020703f8020b
15211a182013060372fdb372020a1622181a20120602f8010c1621191821
12050167024c68010b16211a182013050219070c070505070c07023ffdc1
070c070505070c0704dc070c070505070c07fdf90207070c070505070c07
>KNRAAA+Calibri,Italic AddT42Char 
1 1276 69 <00010052fffa051d0511003b014eba027d027e00582bb10102435558401e
0b2d2d01311d3b0102003b0112033b2810101f40141e36520f102d282c28
b8fff0b31e244828b8fff040180a154810101e244810100a15480e101e24
480e100a15482bb8fff0b31e24482bb8fff0b30a15482cb8fff0b31e2448
2cb8fff040220a15480b101e24480b100a1548141e010b2c2b0e10281f3b
310c19225119550654282b183f3f3f121739002b2b2b2b2b2b2b2b2b2b2b
2b112b3311333f012f331acd321133d45f5e5d5f5d32c632113331301bb7
36520f102d282c28b8fff0b31e244828b8fff040180a154810101e244810
100a15480e101e24480e100a15482bb8fff0b31e24482bb8fff0b30a1548
2cb8fff0b31e24482cb8fff040220a15480b101e24480b100a1548141e01
0b2c2b0e10281f3b310c19225119550654282b183f3f3f121739002b2b2b
2b2b2b2b2b2b2b2b2b112b3311333f313059250e032323222e0227032626
2723060607030e0323222e02371336363333321e02171316161733363637
133e0333321e0207042c0312171a0d411a241b150cf3193117020d1e1096
020b152117171f100502ee08331a4f18241a140cf5172d16020e21108d02
0a141f18171f11060147141c12080c1d2f2302b24a934a52a251fd0e080c
070505070c0804aa28220a1a2920fd4541824252b05202bd080b08040408
0b08>KNRAAA+Calibri,Italic AddT42Char 
1 1788 75 <00020072ffed051205210017002f0057ba027d027e00582bb10102435558
bf00000239001800240253000c001d0127b2135329b80129b3400756282b
183f1a4ded3fed012fedd4ed31301bb9001d0127b2135329b80129b34007
56282b183f1a4ded3fed31305901140e0423222e0235343e0433321e0207
342e0223220e0415141e0233323e0405121c426da0dc8e72ac733a1e456f
a1d88c71ab733ab820467452689d734b2d131f487353679c724c2e13035c
4dbec4b98f583971a66d56c6c5b68d533b73a97a4675542f4d7c9da09637
4773522d4b7a9b9f9600>KNRAAA+Calibri,Italic AddT42Char 
1 2322 374 <0001003ffffa03b003ca003a007bba027f028000582bb101024355584026
311a1a1b26040e03000f0114030f0e2515f940364a251b0e041a0f312608
202b49204c094c282b183f3f3f1217393f1a4ded012fc4c45f5e5d321133
c63332113331301b401615f940364a251b0e041a0f312608202b49204c09
4c282b183f3f3f1217393f1a4ded31305901140607030e0323222e023713
363635342623220e0207030e0323222e0237133e0333321e0207073e0333
321e0203b00807710209152019181f1105016f0705343d356f5f4b115002
0a142118191f110502b50109131d14151b0f0401220f445e713d435a3818
02d6234424fdce080b080404080b08022c1f3a163d4b3d6b9356fe6e080b
080404080b080385070c080303080c07ac224c402a294358>KNRAAA+Calibri,Italic AddT42Char 
1 2616 381 <0002004effed03d103ca0017002f0058ba027f028000582bb10102435558
b90000021f4009001810180213031824b8021e400b0c1df5134a29e34007
4d282b183f1a4ded3fed012fedd45f5e5ded31301b400a1df5134a29e340
074d282b183f1a4ded3fed31305901140e0423222e0235343e0433321e02
07342e0223220e0415141e0233323e0403d11c395877975d6089582a1b3a
5777975d6089592aae15314f383c624d39251216314e383d614d39251202
734a9a8f7e5e372e5880514a9a8e7f5e372f58805a3250371e2b49626f75
383250381e2b4a627074>KNRAAA+Calibri,Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>KNRAAA+Calibri,Italic AddT42Char 
KNRAAA+Calibri,Italic /CharStrings get begin
/space 3 def
/ampersand 920 def
/parenleft 894 def
/parenright 895 def
/plus 1085 def
/two 1006 def
/four 1008 def
/C 18 def
/H 44 def
/N 69 def
/O 75 def
/n 374 def
/o 381 def
end
KNRAAA+Calibri,Italic /Encoding get
dup 32 /space put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 50 /two put
dup 52 /four put
dup 67 /C put
dup 72 /H put
dup 78 /N put
dup 79 /O put
dup 110 /n put
dup 111 /o put
pop
end
%ADOEndSubsetFont
/UAZDMZ+Calibri,Italic /KNRAAA+Calibri,Italic findfont ct_VMDictPut
/UAZDMZ+Calibri,Italic*1 
[32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef 
/plus 6{/.notdef}rp /two /.notdef /four 14{/.notdef}rp /C 4{/.notdef}rp 
/H 5{/.notdef}rp /N /O 30{/.notdef}rp /n /o 144{/.notdef}rp]
UAZDMZ+Calibri,Italic nf
UAZDMZ+Calibri,Italic*1 [15.96 0 0 -15.96 0 0 ]msf
454.01 199.73 mo
(\(+ CO & CH)
[4.83578 7.88425 3.7027 8.15561 10.438 3.70267 10.8848 3.60693 8.33115 0 ]xsh
UAZDMZ+Calibri,Italic*1 [10.68 0 0 -10.68 0 0 ]msf
525.53 203.57 mo
(4)sh
UAZDMZ+Calibri,Italic*1 [15.96 0 0 -15.96 0 0 ]msf
530.93 199.73 mo
(\))sh
535.73 199.73 mo
( )sh
UAZDMZ+Calibri,Italic*1 [18 0 0 -18 0 0 ]msf
406.97 221.33 mo
( )sh
UAZDMX+Calibri,Bold*1 [18 0 0 -18 0 0 ]msf
418.3 273.6 mo
(CH)
[9.48013 0 ]xsh
UAZDMX+Calibri,Bold*1 [12 0 0 -12 0 0 ]msf
439.18 278.04 mo
(4 )
[6.12006 0 ]xsh
UAZDMX+Calibri,Bold*1 [18 0 0 -18 0 0 ]msf
447.94 273.6 mo
(frost)
[5.6879 6.06592 9.6839 7.00204 0 ]xsh
UAZDMX+Calibri,Bold*1 [15.96 0 0 -15.96 0 0 ]msf
482.64 273.6 mo
( )sh
UAZDMZ+Calibri,Italic*1 [15.96 0 0 -15.96 0 0 ]msf
486.24 273.6 mo
(\(no N)
[4.83578 8.12375 8.1875 3.91016 0 ]xsh
UAZDMZ+Calibri,Italic*1 [10.68 0 0 -10.68 0 0 ]msf
521.64 277.44 mo
(2)sh
%ADOBeginSubsetFont: AJHAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /AJHAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcb878000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c796656b85cdb0000850c0000067268656164f312fd1500000f640000
0036686865610dad06da00000f9c00000024686d74781bef03b400000fc0
000025846c6f636129a42c310000354400001e546d617870213624940000
5398000000206e616d651bad7180000053b800000d3e70726570f7fb63c9
000060f800002414676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
00a00600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005bd7167c5f2cc5f0f3cf500190800
00000000bbeb7ccc00000000d20f7899fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000399040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000026d007a00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a1014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e01e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e02a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f303390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
033903390339033903390339033903390339033903390339033903390339
03390339033903390339000100000f29004f00050000000000020010002f
0065000011922414000000000000002d0222000000030000000000640000
0000000300000001000e00640000000300000002000e0304000000030000
0003002403120000000300000004000e0064000000030000000500180336
0000000300000006000e006400000003000000070076034e000000030000
0008002a000e0000000300000009002003c4000000030000000a02a00064
000000030000000b005603e4000000030000000c002a043a000000030000
000d02980464000000030000000e006c06fc000100000000000000320768
00010000000000010007079a0001000000000002000708ea000100000000
0003001208f100010000000000040007079a0001000000000005000c0903
00010000000000060007079a0001000000000007003b090f000100000000
00080015076f00010000000000090010094a000100000000000a0150079a
000100000000000b002b095a000100000000000c00150985000100000000
000d014c099a000100000000000e00360ae6000300010409000000640000
0003000104090001000e00640003000104090002000e0304000300010409
0003002403120003000104090004000e0064000300010409000500180336
0003000104090006000e006400030001040900070076034e000300010409
0008002a000e0003000104090009002003c4000300010409000a02a00064
000300010409000b005603e4000300010409000c002a043a000300010409
000d02980464000300010409000e006c06fc00a900200032003000310035
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0043
0061006c0069006200720069002000690073002000610020006d006f0064
00650072006e002000730061006e00730020007300650072006900660020
00660061006d0069006c0079002000770069007400680020007300750062
0074006c006500200072006f0075006e00640069006e006700730020006f
006e0020007300740065006d007300200061006e006400200063006f0072
006e006500720073002e0020004900740020006600650061007400750072
006500730020007200650061006c0020006900740061006c006900630073
002c00200073006d0061006c006c00200063006100700073002c00200061
006e00640020006d0075006c007400690070006c00650020006e0075006d
006500720061006c00200073006500740073002e00200049007400730020
00700072006f0070006f007200740069006f006e007300200061006c006c
006f00770020006800690067006800200069006d00700061006300740020
0069006e002000740069006700680074006c007900200073006500740020
006c0069006e006500730020006f0066002000620069006700200061006e
006400200073006d0061006c006c0020007400650078007400200061006c
0069006b0065002e002000430061006c0069006200720069002700730020
006d0061006e0079002000630075007200760065007300200061006e0064
00200074006800650020006e006500770020007200610073007400650072
00690073006500720020007400650061006d00200075007000200069006e
0020006200690067006700650072002000730069007a0065007300200074
006f002000720065007600650061006c002000610020007700610072006d
00200061006e006400200073006f00660074002000630068006100720061
0063007400650072002e0052006500670075006c00610072004d00690063
0072006f0073006f00660074003a002000430061006c0069006200720069
00560065007200730069006f006e00200035002e0037003400430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303135
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c6962726956657273696f6e20352e373443616c
6962726920697320612074726164656d61726b206f6620746865204d6963
726f736f66742067726f7570206f6620636f6d70616e6965732e4c756328
6173292064652047726f6f74687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f6374666f6e7473687474703a
2f2f666f6e7466616272696b2e636f6d596f75206d617920757365207468
697320666f6e74206173207065726d697474656420627920746865204555
4c4120666f72207468652070726f6475637420696e207768696368207468
697320666f6e7420697320696e636c7564656420746f20646973706c6179
20616e64207072696e7420636f6e74656e742e20596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e687474703a2f2f7777772e6d
6963726f736f66742e636f6d2f7479706f6772617068792f666f6e74732f
64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b4
01151f4603bd0100010000050001019000542b4bb80800524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d4259
4bb0805358b20340401d42594bb0ff5358b20300001d42592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400640283
0064028200640281006402800064027f0064027e0064027d0064027c0064
027b0064027a006402790064027800640277006402760064027500640274
0064027300640271006402700064026f0064026e0064026d0064026c0064
026b0064026a006402690064026800640267006402660064026500640264
006402630064026200640261006402600064025f0064025e0064025d0064
025c0064025b0064025a0064025900640258006402570064025600640255
00640254006402530064025200640251006402500064024f0064024e0064
024d0064024c0064024b0064024a00640249006402480064024700640246
0064024500640244006402430064024200640241006402400064023f0064
023e0064023d0064023c0064023b0064023a006402390064023800640237
006402360064023500640234006402330064023200640231006402300064
022f0064022e0064022d0064022c0064022b0064022a0064022900640228
006402270064022600640225006402240064022300640222006402210064
02200064021f0064021e0064021d0064021c0064021b0064021a00640219
006402180064021700640216006402150064021400640213006402120064
0211006402100064020f0064020e0064020d0064020c0064020b0064020a
00640209006402080064020700640206006402050064020441ff00640203
006402020064020100640200006401ff006401fe006401fd006401fc0064
01fb006401fa006401f9006401f8006401f7006401f6006401f5006401f4
006401f3006401f2006401f1006401f0006401ef006401ee006401ed0064
01ec006401eb006401ea006401e9006401e8006401e7006401e6006401e5
006401e4006401e3006401e2006401e1006401e0006401df006401de0064
01dd006401dc006401db006401da006401d9006401d8006401d7006401d6
006401d5006401d4006401d3006401d2006401d1006401d0006401cf0064
01ce006401cd006401cc006401cb006401ca006401c9006401c8006401c7
006401c6006401c5006401c4006401c3006401c2006401c1006401c00064
01bf006401be006401bd006401bc006401bb006401ba006401b9006401b8
006401b7006401b6006401b5006401b4006401b3006401b2006401b10064
01b0006401af006401ae006401ad006401ac006401ab006401aa006401a9
006401a8006401a7006401a6006401a5006401a4006401a3006401a20064
01a1006401a00064019f0064019e0064019d0064019c0064019b0064019a
006401990064019800640197006401960064019500640194006401930064
019200640191006401900064018f0064018e0064018d0064018c0064018b
0064018a0064018900640188006401870064018600640185006441800184
006401830064018200640181006401800064017f0064017e0064017d0064
017c0064017b0064017a0064017900640178006401770064017600640175
00640174006401730064017200640171006401700064016f0064016e0064
016d0064016c0064016b0064016a00640169006401680064016700640166
0064016500640164006401630064016200640161006401600064015f0064
015e0064015d0064015c0064015b0064015a006401590064015800640157
0064015600640155006401540064015300640152006401500064014f0064
014e0064014c0064014b0064014a00640149006401480064014700640146
00640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[1651 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> AJHAAA+Calibri AddT42Char 
2 1350 895 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>AJHAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>AJHAAA+Calibri AddT42Char 
AJHAAA+Calibri /CharStrings get begin
/space 3 def
/parenright 895 def
end
AJHAAA+Calibri /Encoding get
dup 32 /space put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/UAZDNA+Calibri /AJHAAA+Calibri findfont ct_VMDictPut
/UAZDNA+Calibri*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 214{/.notdef}rp]
UAZDNA+Calibri nf
UAZDNA+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
527.04 273.6 mo
(\))sh
UAZDMZ+Calibri,Italic*1 [15.96 0 0 -15.96 0 0 ]msf
531.84 273.6 mo
( )sh
UAZDNA+Calibri*1 [18 0 0 -18 0 0 ]msf
418.3 295.2 mo
( )sh
UAZDMX+Calibri,Bold*1 [18 0 0 -18 0 0 ]msf
420.65 340.78 mo
(Bare)
[10.0981 8.89206 6.08392 0 ]xsh
454.85 340.78 mo
( )sh
458.81 340.78 mo
(ground)
[8.53198 6.10193 9.6839 9.73804 9.70206 0 ]xsh
512.35 340.78 mo
( )sh
516.07 340.78 mo
( )sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/UAZDMZ+Calibri,Italic*1 uf
/UAZDMZ+Calibri,Italic uf
/KNRAAA+Calibri,Italic uf
/UAZDNA+Calibri*1 uf
/UAZDNA+Calibri uf
/AJHAAA+Calibri uf
/UAZDMY+Calibri,BoldItalic*1 uf
/UAZDMY+Calibri,BoldItalic uf
/KTBBAA+Calibri,BoldItalic uf
/UAZDMX+Calibri,Bold*1 uf
/UAZDMX+Calibri,Bold uf
/MNDBAA+Calibri,Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
